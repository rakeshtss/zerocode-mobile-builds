(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{r1BU:function(e,t,o){"use strict";o.d(t,"c",function(){return G}),o.d(t,"d",function(){return I}),o.d(t,"a",function(){return L}),o.d(t,"b",function(){return q}),o.d(t,"e",function(){return te});var r=o("WT9V"),n=o("LoAr"),i=o("SeAg"),s=o("AouM"),a=o("G2Mx"),l=o("lqvn"),p=o("R+ki"),f=o("W/Ou"),u=o("Jg5f"),c=o("IfiR"),d=o("XO9t"),h=o("fQLH"),m=o("pN2L"),y=o("HnWI"),g=o("D57K");function v(e,t,o){if(t.id)return t.id;var r=t.type;return!r&&t.template&&(r="template"),[e,r,t.key,o].join("_")}function b(e){if(!e.key)return[];if(!e._keyPath||e._keyPath.key!==e.key){var t=[];if("string"==typeof e.key){var o=-1===e.key.indexOf("[")?e.key:e.key.replace(/\[(\w+)\]/g,".$1");t=-1!==o.indexOf(".")?o.split("."):[o]}else t=Array.isArray(e.key)?e.key.slice(0):[""+e.key];e._keyPath={key:e.key,path:t}}return e._keyPath.path.slice(0)}var C=["required","pattern","minLength","maxLength","min","max"];function O(e,t){var o=b(e);if(0!==o.length){for(var r=e;r.parent;)r=r.parent,o=Object(g.j)(b(r),o);if(void 0===t&&e.resetOnHide){var n=o.pop();delete o.reduce(function(e,t){return e[t]||{}},r.model)[n]}else!function(e,t,o){for(var r=0;r<t.length-1;r++){var n=t[r];e[n]&&j(e[n])||(e[n]=/^\d+$/.test(t[r+1])?[]:{}),e=e[n]}e[t[t.length-1]]=w(o)}(r.model,o,t)}}function F(e){var t,o,r=e.parent.model;try{for(var n=Object(g.k)(b(e)),i=n.next();!i.done;i=n.next()){var s=i.value;if(!r)return r;r=r[s]}}catch(a){t={error:a}}finally{try{i&&!i.done&&(o=n.return)&&o.call(n)}finally{if(t)throw t.error}}return r}function E(e){for(var t=[],o=1;o<arguments.length;o++)t[o-1]=arguments[o];return t.forEach(function(t){for(var o in t)_(e[o])||""===e[o]?e[o]=w(t[o]):(r=e[o],n=t[o],j(r)&&j(n)&&Object.getPrototypeOf(r)===Object.getPrototypeOf(n)&&!Array.isArray(r)&&!Array.isArray(n)&&E(e[o],t[o]));var r,n}),e}function _(e){return null==e}function k(e){return void 0===e}function x(e){return"function"==typeof e}function j(e){return null!=e&&"object"==typeof e}function w(e){if(!j(e)||Object(d.a)(e)||e.changingThisBreaksApplicationSecurity||-1!==["RegExp","FileList","File","Blob"].indexOf(e.constructor.name))return e;if(e instanceof Set)return new Set(e);if(e instanceof Map)return new Map(e);if(e._isAMomentObject&&x(e.clone))return e.clone();if(e instanceof c.AbstractControl)return null;if(e instanceof Date)return new Date(e.getTime());if(Array.isArray(e))return e.slice(0).map(function(e){return w(e)});var t=Object.getPrototypeOf(e),o=Object.create(t);return o=Object.setPrototypeOf(o,t),Object.keys(e).reduce(function(t,o){var r=Object.getOwnPropertyDescriptor(e,o);return r.get?Object.defineProperty(t,o,r):t[o]=w(e[o]),t},o)}function V(e,t,o){Object.defineProperty(e,t,{enumerable:!1,writable:!0,configurable:!0}),e[t]=o}function P(e,t,o){e._observers||V(e,"_observers",{}),e._observers[t]||(e._observers[t]=[]);var r=e._observers[t];return-1===r.indexOf(o)&&(r.push(o),o({currentValue:e[t],firstChange:!0}),1===r.length&&(V(e,"___$"+t,e[t]),Object.defineProperty(e,t,{configurable:!0,get:function(){return e["___$"+t]},set:function(o){if(o!==e["___$"+t]){var n=e["___$"+t];e["___$"+t]=o,r.forEach(function(e){return e({previousValue:n,currentValue:o,firstChange:!1})})}}}))),function(){return r.splice(r.indexOf(o),1)}}function R(e,t){var o=e._updateTreeValidity.bind(e),r={called:!1,emitEvent:!1};e._updateTreeValidity=function(e){var t=(void 0===e?{emitEvent:!0}:e).emitEvent;return r={called:!0,emitEvent:t||r.emitEvent}},t(),r.called&&o({emitEvent:r.emitEvent}),e._updateTreeValidity=o}var A=new n.InjectionToken("FORMLY_CONFIG"),G=function(){function e(){this.types={},this.validators={},this.wrappers={},this.messages={},this.templateManipulators={preWrapper:[],postWrapper:[]},this.extras={checkExpressionOn:"changeDetectionCheck",lazyRender:!1,showError:function(e){return e.formControl&&e.formControl.invalid&&(e.formControl.touched||e.options.parentForm&&e.options.parentForm.submitted||!(!e.field.validation||!e.field.validation.show))}},this.extensions={}}return e.prototype.addConfig=function(e){var t=this;e.types&&e.types.forEach(function(e){return t.setType(e)}),e.validators&&e.validators.forEach(function(e){return t.setValidator(e)}),e.wrappers&&e.wrappers.forEach(function(e){return t.setWrapper(e)}),e.manipulators&&(console.warn("NgxFormly: passing 'manipulators' config is deprecated, use custom extension instead."),e.manipulators.forEach(function(e){return t.setManipulator(e)})),e.validationMessages&&e.validationMessages.forEach(function(e){return t.addValidatorMessage(e.name,e.message)}),e.extensions&&e.extensions.forEach(function(e){return t.extensions[e.name]=e.extension}),e.extras&&(this.extras=Object(g.a)({},this.extras,e.extras))},e.prototype.setType=function(e){var t=this;Array.isArray(e)?e.forEach(function(e){return t.setType(e)}):(this.types[e.name]||(this.types[e.name]={name:e.name}),["component","extends","defaultOptions","wrappers"].forEach(function(o){e.hasOwnProperty(o)&&(t.types[e.name][o]=e[o])}))},e.prototype.getType=function(e){if(!this.types[e])throw new Error('[Formly Error] The type "'+e+'" could not be found. Please make sure that is registered through the FormlyModule declaration.');return this.mergeExtendedType(e),this.types[e]},e.prototype.getMergedField=function(e){var t=this;void 0===e&&(e={});var o=this.getType(e.type);o.defaultOptions&&E(e,o.defaultOptions);var r=o.extends&&this.getType(o.extends).defaultOptions;r&&E(e,r),e&&e.optionsTypes&&e.optionsTypes.forEach(function(o){var r=t.getType(o).defaultOptions;r&&E(e,r)});var n=this.resolveFieldTypeRef(e);n&&n.instance&&n.instance.defaultOptions&&E(e,n.instance.defaultOptions),!e.wrappers&&o.wrappers&&(e.wrappers=Object(g.j)(o.wrappers))},e.prototype.resolveFieldTypeRef=function(e){if(void 0===e&&(e={}),!e.type)return null;var t=this.getType(e.type);if(!t.component||t._componentRef)return t._componentRef;var o=e.parent.options,r=o._resolver,n=o._injector,i=r.resolveComponentFactory(t.component).create(n);return V(t,"_componentRef",i),i.destroy(),t._componentRef},e.prototype.setWrapper=function(e){var t=this;this.wrappers[e.name]=e,e.types&&e.types.forEach(function(o){t.setTypeWrapper(o,e.name)})},e.prototype.getWrapper=function(e){if(!this.wrappers[e])throw new Error('[Formly Error] The wrapper "'+e+'" could not be found. Please make sure that is registered through the FormlyModule declaration.');return this.wrappers[e]},e.prototype.setTypeWrapper=function(e,t){this.types[e]||(this.types[e]={}),this.types[e].wrappers||(this.types[e].wrappers=[]),-1===this.types[e].wrappers.indexOf(t)&&this.types[e].wrappers.push(t)},e.prototype.setValidator=function(e){this.validators[e.name]=e},e.prototype.getValidator=function(e){if(!this.validators[e])throw new Error('[Formly Error] The validator "'+e+'" could not be found. Please make sure that is registered through the FormlyModule declaration.');return this.validators[e]},e.prototype.addValidatorMessage=function(e,t){this.messages[e]=t},e.prototype.getValidatorMessage=function(e){return this.messages[e]},e.prototype.setManipulator=function(e){(new e.class)[e.method](this)},e.prototype.mergeExtendedType=function(e){if(this.types[e].extends){var t=this.getType(this.types[e].extends);this.types[e].component||(this.types[e].component=t.component),this.types[e].wrappers||(this.types[e].wrappers=t.wrappers)}},e.decorators=[{type:n.Injectable,args:[{providedIn:"root"}]}],e.ngInjectableDef=Object(n.defineInjectable)({factory:function(){return new e},token:e,providedIn:"root"}),e}(),I=function(){function e(e,t,o){this.formlyConfig=e,this.componentFactoryResolver=t,this.injector=o}return e.prototype.buildForm=function(e,t,o,r){var n=this;if(void 0===t&&(t=[]),!this.formlyConfig.extensions.core)throw new Error("NgxFormly: missing `forRoot()` call. use `forRoot()` when registering the `FormlyModule`.");var i={fieldGroup:t,model:o,formControl:e,options:this._setOptions(r)};R(e,function(){return n._buildForm(i)}),i.options._checkField(i,!0)},e.prototype._buildForm=function(e){var t=this;this.getExtensions().forEach(function(t){return t.prePopulate&&t.prePopulate(e)}),this.getExtensions().forEach(function(t){return t.onPopulate&&t.onPopulate(e)}),e.fieldGroup&&e.fieldGroup.forEach(function(e){return t._buildForm(e)}),this.getExtensions().forEach(function(t){return t.postPopulate&&t.postPopulate(e)})},e.prototype.getExtensions=function(){var e=this;return Object.keys(this.formlyConfig.extensions).map(function(t){return e.formlyConfig.extensions[t]})},e.prototype._setOptions=function(e){var t=this;return(e=e||{}).formState=e.formState||{},e.showError||(e.showError=this.formlyConfig.extras.showError),e.fieldChanges||V(e,"fieldChanges",new h.a),e._resolver||V(e,"_resolver",this.componentFactoryResolver),e._injector||V(e,"_injector",this.injector),e._hiddenFieldsForCheck||(e._hiddenFieldsForCheck=[]),e._markForCheck||(e._markForCheck=function(t){t._componentRefs&&t._componentRefs.forEach(function(e){e.injector.get(n.ChangeDetectorRef).markForCheck()}),t.fieldGroup&&t.fieldGroup.forEach(function(t){return e._markForCheck(t)})}),e._buildField||(e._buildField=function(e){return t.buildForm(e.form,e.fieldGroup,e.model,e.options),e}),e},e.decorators=[{type:n.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:G},{type:n.ComponentFactoryResolver},{type:n.Injector}]},e.ngInjectableDef=Object(n.defineInjectable)({factory:function(){return new e(Object(n.inject)(G),Object(n.inject)(n.ComponentFactoryResolver),Object(n.inject)(n.INJECTOR))},token:e,providedIn:"root"}),e}();function M(e,t){void 0===t&&(t=!1);var o=e.formControl.parent;if(o){var r=e.formControl,n={emitEvent:t};if(o instanceof c.FormArray){var i=o.controls.findIndex(function(e){return e===r});-1!==i&&S(o,n,function(){return o.removeAt(i)})}else if(o instanceof c.FormGroup){var s=b(e),a=s[s.length-1];o.get([a])===r&&S(o,n,function(){return o.removeControl(a)})}r.setParent(null)}}function T(e){if(e.formControl)return e.formControl;if(!1===e.shareFormControl)return null;var t=e.parent.formControl;return t?t.get(b(e)):null}function D(e,t,o){void 0===o&&(o=!1),(t=t||e.formControl)._fields||V(t,"_fields",[]),-1===t._fields.indexOf(e)&&t._fields.push(e),!e.formControl&&t&&(V(e,"formControl",t),t.setValidators(null),t.setAsyncValidators(null),e.templateOptions.disabled=!!e.templateOptions.disabled,P(e.templateOptions,"disabled",function(t){var o=t.firstChange,r=t.currentValue;o||(r?e.formControl.disable():e.formControl.enable())}),t.registerOnDisabledChange&&t.registerOnDisabledChange(function(t){e.templateOptions.___$disabled=t,e.options&&e.options._markForCheck(e)}));var r=e.parent.formControl;if(r&&e.key){var n=b(e),i=F(e);_(t.value)&&_(i)||t.value===i||!(t instanceof c.FormControl)||t.patchValue(i);for(var s=function(e){var t=n[e];r.get([t])||S(r,{emitEvent:o},function(){return r.setControl(t,new c.FormGroup({}))}),r=r.get([t])},a=0;a<n.length-1;a++)s(a);var l=n[n.length-1];e._hide||r.get([l])===t||S(r,{emitEvent:o},function(){return r.setControl(l,t)})}}function N(e){var t=e.status;e.updateValueAndValidity({emitEvent:!1}),t!==e.status&&e.statusChanges.emit(e.status)}function S(e,t,o){e instanceof c.FormGroup&&!e.__patchForEachChild&&(V(e,"__patchForEachChild",!0),e._forEachChild=function(t){Object.keys(e.controls).forEach(function(o){return e.controls[o]&&t(e.controls[o],o)})});var r=e.updateValueAndValidity.bind(e);!1===t.emitEvent&&(e.updateValueAndValidity=function(e){r(Object(g.a)({},e||{},{emitEvent:!1}))}),o(),!1===t.emitEvent&&(e.updateValueAndValidity=r)}var H=function(){function e(e,t,o,r,i){var l=this;this.formlyBuilder=e,this.formlyConfig=t,this.ngZone=o,this.parentFormGroup=i,this.modelChange=new n.EventEmitter,this.immutable=!1,this._modelChangeValue={},this.modelChangeSubs=[],this.modelChange$=new h.a,this.modelChangeSub=this.modelChange$.pipe(Object(s.a)(function(){return l.ngZone.onStable.asObservable().pipe(Object(a.a)(1))})).subscribe(function(){return l.ngZone.runGuarded(function(){l.checkExpressionChange(),l.modelChange.emit(l._modelChangeValue=w(l.model))})}),null!==r&&console.warn("NgxFormly: passing 'immutable' attribute to 'formly-form' component is deprecated since v5.5, enable immutable mode through NgModule declaration instead."),this.immutable=null!==r||!!t.extras.immutable}return Object.defineProperty(e.prototype,"model",{get:function(){return this._model||(this._model={}),this._model},set:function(e){this._model=this.immutable?w(e):e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"fields",{get:function(){return this._fields||[]},set:function(e){this._fields=this.immutable?w(e):e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"options",{get:function(){return this._options},set:function(e){this._options=this.immutable?w(e):e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"content",{set:function(e){if(e){for(var t=!1,o=e.nativeElement.nextSibling;o&&!t;)(o.nodeType===Node.ELEMENT_NODE||o.nodeType===Node.TEXT_NODE&&o.textContent&&""!==o.textContent.trim())&&(t=!0),o=o.nextSibling;t&&console.warn("NgxFormly: content projection for 'formly-form' component is deprecated since v5.5, you should avoid passing content inside the 'formly-form' tag.")}},enumerable:!0,configurable:!0}),e.prototype.ngDoCheck=function(){"changeDetectionCheck"===this.formlyConfig.extras.checkExpressionOn&&this.checkExpressionChange()},e.prototype.ngOnChanges=function(e){e.model&&this.field&&(this.field.model=this.model),e.fields&&this.form&&function e(t){t._fields&&delete t._fields,(t instanceof c.FormGroup||t instanceof c.FormArray)&&Object.keys(t.controls).forEach(function(o){return e(t.controls[o])})}(this.form),(e.fields||e.form||e.model&&this._modelChangeValue!==e.model.currentValue)&&(this.form=this.form||new c.FormGroup({}),this.setOptions(),this.options.updateInitialValue(),this.clearModelSubscriptions(),this.formlyBuilder.buildForm(this.form,this.fields,this.model,this.options),this.trackModelChanges(this.fields))},e.prototype.ngOnDestroy=function(){this.modelChangeSub.unsubscribe(),this.clearModelSubscriptions()},e.prototype.changeModel=function(e){e.key;var t=e.value;O(e.field,t),this.modelChange$.next()},e.prototype.setOptions=function(){var e=this;this.options||(this.options={}),this.options.resetModel||(this.options.resetModel=function(t){t=w(_(t)?e.options._initialModel:t),e.model&&(Object.keys(e.model).forEach(function(t){return delete e.model[t]}),Object.assign(e.model,t||{})),e.options._buildForm(),e.options.parentForm&&e.options.parentForm.control===e.form?e.options.parentForm.resetForm(e.model):e.form.reset(e.model)}),!this.options.parentForm&&this.parentFormGroup&&(V(this.options,"parentForm",this.parentFormGroup),P(this.options.parentForm,"submitted",function(t){t.firstChange||(e.checkExpressionChange(),e.options._markForCheck({fieldGroup:e.fields,model:e.model,formControl:e.form,options:e.options}))})),this.options.updateInitialValue||(this.options.updateInitialValue=function(){return e.options._initialModel=w(e.model)}),this.options._buildForm||(this.options._buildForm=function(t){void 0===t&&(t=!1),e.clearModelSubscriptions(),e.formlyBuilder.buildForm(e.form,e.fields,e.model,e.options),e.trackModelChanges(e.fields),t&&e.modelChange.emit(e._modelChangeValue=w(e.model))})},e.prototype.checkExpressionChange=function(){this.options&&this.options._checkField&&this.options._checkField({fieldGroup:this.fields,model:this.model,formControl:this.form,options:this.options})},e.prototype.trackModelChanges=function(e,t){var o=this;void 0===t&&(t=[]),e.forEach(function(e){if(e.key&&!e.fieldGroup&&e.formControl){var r=e.formControl,n=r.valueChanges.pipe(Object(l.a)(function(e,t){return e===t&&!Array.isArray(e)&&!j(e)})),i=e.modelOptions,s=i.updateOn,a=i.debounce;(!s||"change"===s)&&a&&a.default>0&&(n=r.valueChanges.pipe(Object(p.a)(a.default))),o.modelChangeSubs.push(n.subscribe(function(n){r instanceof c.FormControl&&r._fields&&r._fields.length>1&&r.patchValue(n,{emitEvent:!1,onlySelf:!0}),e.parsers&&e.parsers.length>0&&e.parsers.forEach(function(e){return n=e(n)}),o.changeModel({key:Object(g.j)(t,b(e)).join("."),value:n,field:e})}));var f=r.valueChanges.observers;f&&f.length>1&&f.unshift(f.pop())}e.fieldGroup&&e.fieldGroup.length>0&&o.trackModelChanges(e.fieldGroup,e.key?Object(g.j)(t,b(e)):t)})},e.prototype.clearModelSubscriptions=function(){this.modelChangeSubs.forEach(function(e){return e.unsubscribe()}),this.modelChangeSubs=[]},Object.defineProperty(e.prototype,"field",{get:function(){return this.fields&&this.fields[0]&&this.fields[0].parent},enumerable:!0,configurable:!0}),e.decorators=[{type:n.Component,args:[{selector:"formly-form",template:'\n    <formly-field *ngFor="let field of fields"\n      hide-deprecation\n      [form]="field.form"\n      [options]="field.options"\n      [model]="field.model"\n      [field]="field">\n    </formly-field>\n    <ng-container #content>\n      <ng-content></ng-content>\n    </ng-container>\n  ',providers:[I]}]}],e.ctorParameters=function(){return[{type:I},{type:G},{type:n.NgZone},{type:void 0,decorators:[{type:n.Attribute,args:["immutable"]}]},{type:c.FormGroupDirective,decorators:[{type:n.Optional}]}]},e.propDecorators={form:[{type:n.Input}],model:[{type:n.Input}],fields:[{type:n.Input}],options:[{type:n.Input}],modelChange:[{type:n.Output}],content:[{type:n.ViewChild,args:["content"]}]},e}(),W=function(){function e(e,t,o,r,i){this.formlyConfig=e,this.renderer=t,this.resolver=o,this.elementRef=r,this.warnDeprecation=!1,this.modelChange=new n.EventEmitter,this.hostObservers=[],this.componentRefs=[],this.hooksObservers=[],this.detectFieldBuild=!1,this.warnDeprecation=null===i}return Object.defineProperty(e.prototype,"model",{set:function(e){this.warnDeprecation&&console.warn("NgxFormly: passing 'model' input to '"+this.constructor.name+"' component is not required anymore, you may remove it!")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"form",{set:function(e){this.warnDeprecation&&console.warn("NgxFormly: passing 'form' input to '"+this.constructor.name+"' component is not required anymore, you may remove it!")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"options",{set:function(e){this.warnDeprecation&&console.warn("NgxFormly: passing 'options' input to '"+this.constructor.name+"' component is not required anymore, you may remove it!")},enumerable:!0,configurable:!0}),e.prototype.ngAfterContentInit=function(){this.triggerHook("afterContentInit")},e.prototype.ngAfterContentChecked=function(){this.triggerHook("afterContentChecked")},e.prototype.ngAfterViewInit=function(){this.triggerHook("afterViewInit")},e.prototype.ngAfterViewChecked=function(){this.triggerHook("afterViewChecked")},e.prototype.ngDoCheck=function(){this.triggerHook("doCheck"),this.detectFieldBuild&&this.field&&this.field.options&&this.render()},e.prototype.ngOnInit=function(){this.triggerHook("onInit")},e.prototype.ngOnChanges=function(e){this.triggerHook("onChanges",e)},e.prototype.ngOnDestroy=function(){this.resetRefs(this.field),this.hostObservers.forEach(function(e){return e()}),this.hooksObservers.forEach(function(e){return e()}),this.triggerHook("onDestroy")},e.prototype.renderField=function(e,t,o){var r=this;if(void 0===o&&(o=[]),this.containerRef===e&&(this.resetRefs(this.field),this.containerRef.clear(),o=this.field?this.field.wrappers:[]),o&&o.length>0){var n=Object(g.h)(o),i=n[0],s=n.slice(1),a=this.formlyConfig.getWrapper(i).component,l=e.createComponent(this.resolver.resolveComponentFactory(a));this.attachComponentRef(l,t),P(l.instance,"fieldComponent",function(e){var o=e.firstChange,n=e.previousValue,i=e.currentValue;if(i){if(n&&n._lContainer===i._lContainer)return;var a=n?n.detach():null;a&&!a.destroyed?i.insert(a):r.renderField(i,t,s),!o&&l.changeDetectorRef.detectChanges()}})}else if(t&&t.type){a=this.formlyConfig.getType(t.type).component;var p=e.createComponent(this.resolver.resolveComponentFactory(a));this.attachComponentRef(p,t)}},e.prototype.triggerHook=function(e,t){if(this.field&&this.field.hooks&&this.field.hooks[e]&&(!t||t.field)){var o=this.field.hooks[e](this.field);if(Object(d.a)(o)&&-1!==["onInit","afterContentInit","afterViewInit"].indexOf(e)){var r=o.subscribe();this.hooksObservers.push(function(){return r.unsubscribe()})}}this.field&&this.field.lifecycle&&this.field.lifecycle[e]&&this.field.lifecycle[e](this.field.form,this.field,this.field.model,this.field.options),"onChanges"===e&&t.field&&(this.resetRefs(t.field.previousValue),this.render())},e.prototype.attachComponentRef=function(e,t){this.componentRefs.push(e),t._componentRefs.push(e),Object.assign(e.instance,{field:t})},e.prototype.render=function(){var e=this;this.field&&(this.field.options?(this.detectFieldBuild=!1,this.hostObservers.forEach(function(e){return e()}),this.hostObservers=[P(this.field,"hide",function(t){var o=t.firstChange,r=t.currentValue;e.formlyConfig.extras.lazyRender?r?e.containerRef.clear():e.renderField(e.containerRef,e.field):(o&&e.renderField(e.containerRef,e.field),(!o||o&&r)&&e.renderer.setStyle(e.elementRef.nativeElement,"display",r?"none":""))}),P(this.field,"className",function(t){var o=t.firstChange,r=t.currentValue;(!o||o&&r)&&e.renderer.setAttribute(e.elementRef.nativeElement,"class",r)})]):this.detectFieldBuild=!0)},e.prototype.resetRefs=function(e){var t=this;e&&(e._componentRefs?e._componentRefs=e._componentRefs.filter(function(e){return-1===t.componentRefs.indexOf(e)}):V(this.field,"_componentRefs",[])),this.componentRefs=[]},e.decorators=[{type:n.Component,args:[{selector:"formly-field",template:"<ng-template #container></ng-template>"}]}],e.ctorParameters=function(){return[{type:G},{type:n.Renderer2},{type:n.ComponentFactoryResolver},{type:n.ElementRef},{type:void 0,decorators:[{type:n.Attribute,args:["hide-deprecation"]}]}]},e.propDecorators={field:[{type:n.Input}],model:[{type:n.Input}],form:[{type:n.Input}],options:[{type:n.Input}],modelChange:[{type:n.Output}],containerRef:[{type:n.ViewChild,args:["container",{read:n.ViewContainerRef,static:!0}]}]},e}(),$=function(){function e(e,t,o){this.renderer=e,this.elementRef=t,this.uiAttributesCache={},this.uiAttributes=Object(g.j)(C,["tabindex","placeholder","readonly","disabled","step"]),this.uiEvents={listeners:[],events:["click","keyup","keydown","keypress"]},this.document=o}return Object.defineProperty(e.prototype,"to",{get:function(){return this.field.templateOptions||{}},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"fieldAttrElements",{get:function(){return this.field&&this.field._elementRefs||[]},enumerable:!0,configurable:!0}),e.prototype.ngOnChanges=function(e){var t=this;e.field&&(this.field.name&&this.setAttribute("name",this.field.name),this.uiEvents.listeners.forEach(function(e){return e()}),this.uiEvents.events.forEach(function(e){t.to&&t.to[e]&&t.uiEvents.listeners.push(t.renderer.listen(t.elementRef.nativeElement,e,function(o){return t.to[e](t.field,o)}))}),this.to&&this.to.attributes&&P(this.to,"attributes",function(e){var o=e.currentValue,r=e.previousValue;r&&Object.keys(r).forEach(function(e){return t.removeAttribute(e)}),o&&Object.keys(o).forEach(function(e){null!=o[e]&&t.setAttribute(e,o[e])})}),this.detachElementRef(e.field.previousValue),this.attachElementRef(e.field.currentValue),1===this.fieldAttrElements.length&&(!this.id&&this.field.id&&this.setAttribute("id",this.field.id),P(this.field,"focus",function(e){var o=e.currentValue;t.toggleFocus(o)}))),e.id&&this.setAttribute("id",this.id)},e.prototype.ngDoCheck=function(){var e=this;this.uiAttributes.forEach(function(t){var o=e.to[t];e.uiAttributesCache[t]===o||e.to.attributes&&e.to.attributes.hasOwnProperty(t.toLowerCase())||(e.uiAttributesCache[t]=o,o||0===o?e.setAttribute(t,!0===o?t:""+o):e.removeAttribute(t))})},e.prototype.ngOnDestroy=function(){this.uiEvents.listeners.forEach(function(e){return e()}),this.detachElementRef(this.field)},e.prototype.toggleFocus=function(e){var t=this,o=this.fieldAttrElements?this.fieldAttrElements[0]:null;if(o&&o.nativeElement.focus){var r=!!this.document.activeElement&&this.fieldAttrElements.some(function(e){var o=e.nativeElement;return t.document.activeElement===o||o.contains(t.document.activeElement)});e&&!r?o.nativeElement.focus():!e&&r&&o.nativeElement.blur()}},e.prototype.onFocus=function(e){this.field.___$focus=!0,this.to.focus&&this.to.focus(this.field,e)},e.prototype.onBlur=function(e){this.field.___$focus=!1,this.to.blur&&this.to.blur(this.field,e)},e.prototype.onChange=function(e){this.to.change&&this.to.change(this.field,e),this.field.formControl&&this.field.formControl.markAsDirty()},e.prototype.attachElementRef=function(e){e&&(e._elementRefs&&-1===e._elementRefs.indexOf(this.elementRef)?e._elementRefs.push(this.elementRef):V(e,"_elementRefs",[this.elementRef]))},e.prototype.detachElementRef=function(e){var t=e&&e._elementRefs?this.fieldAttrElements.indexOf(this.elementRef):-1;-1!==t&&this.field._elementRefs.splice(t,1)},e.prototype.setAttribute=function(e,t){this.renderer.setAttribute(this.elementRef.nativeElement,e,t)},e.prototype.removeAttribute=function(e){this.renderer.removeAttribute(this.elementRef.nativeElement,e)},e.decorators=[{type:n.Directive,args:[{selector:"[formlyAttributes]",host:{"(focus)":"onFocus($event)","(blur)":"onBlur($event)","(change)":"onChange($event)"}}]}],e.ctorParameters=function(){return[{type:n.Renderer2},{type:n.ElementRef},{type:void 0,decorators:[{type:n.Inject,args:[r.DOCUMENT]}]}]},e.propDecorators={field:[{type:n.Input,args:["formlyAttributes"]}],id:[{type:n.Input}]},e}(),L=function(){function e(){}return Object.defineProperty(e.prototype,"model",{get:function(){return this.field.model},set:function(e){console.warn("NgxFormly: passing 'model' input to '"+this.constructor.name+"' component is not required anymore, you may remove it!")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"form",{get:function(){return this.field.parent.formControl},set:function(e){console.warn("NgxFormly: passing 'form' input to '"+this.constructor.name+"' component is not required anymore, you may remove it!")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"options",{get:function(){return this.field.options},set:function(e){console.warn("NgxFormly: passing 'options' input to '"+this.constructor.name+"' component is not required anymore, you may remove it!")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"key",{get:function(){return this.field.key},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"formControl",{get:function(){return this.field.formControl},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"to",{get:function(){return this.field.templateOptions||{}},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"showError",{get:function(){return this.options.showError(this)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"id",{get:function(){return this.field.id},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"formState",{get:function(){return this.options.formState||{}},enumerable:!0,configurable:!0}),e.propDecorators={field:[{type:n.Input}],model:[{type:n.Input}],form:[{type:n.Input}],options:[{type:n.Input}]},e}(),B=(function(e){function t(){var t=e.call(this)||this;return console.warn("NgxFormly: 'Field' has been renamed to 'FieldType', extend 'FieldType' instead."),t}Object(g.d)(t,e)}(L),function(e){function t(t){var o=e.call(this)||this;return o.defaultOptions={defaultValue:[]},t instanceof I&&console.warn("NgxFormly: passing 'FormlyFormBuilder' to '"+o.constructor.name+"' type is not required anymore, you may remove it!"),o}return Object(g.d)(t,e),Object.defineProperty(t.prototype,"formControl",{get:function(){return this.field.formControl},enumerable:!0,configurable:!0}),t.prototype.onPopulate=function(e){if(!e.formControl&&e.key){var t=T(e);D(e,t||new c.FormArray([],{updateOn:e.modelOptions.updateOn}))}e.fieldGroup=e.fieldGroup||[];var o=e.model?e.model.length:0;if(e.fieldGroup.length>o)for(var r=e.fieldGroup.length-1;r>=o;--r)M(e.fieldGroup[r]),e.fieldGroup.splice(r,1);for(r=e.fieldGroup.length;r<o;r++){var n=Object(g.a)({},w(e.fieldArray),{key:""+r});e.fieldGroup.push(n)}},t.prototype.add=function(e,t,o){var r=(void 0===o?{markAsDirty:!0}:o).markAsDirty;e=_(e)?this.field.fieldGroup.length:e,this.model||O(this.field,[]),this.model.splice(e,0,t?w(t):void 0),this.options._buildForm(!0),r&&this.formControl.markAsDirty()},t.prototype.remove=function(e,t){var o=(void 0===t?{markAsDirty:!0}:t).markAsDirty;this.model.splice(e,1),M(this.field.fieldGroup[e],!0),this.field.fieldGroup.splice(e,1),this.field.fieldGroup.forEach(function(e,t){return e.key=""+t}),this.options._buildForm(!0),o&&this.formControl.markAsDirty()},t.decorators=[{type:n.Directive,args:[{selector:"[\u0275fieldArray]"}]}],t.ctorParameters=function(){return[{type:I,decorators:[{type:n.Inject,args:[A]},{type:n.Optional}]}]},t}(L)),q=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return Object(g.d)(t,e),t.propDecorators={fieldComponent:[{type:n.ViewChild,args:["fieldComponent",{read:n.ViewContainerRef,static:!1}]}]},t}(L),J=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.defaultOptions={defaultValue:{}},t}return Object(g.d)(t,e),t.decorators=[{type:n.Component,args:[{selector:"formly-group",template:'\n    <formly-field *ngFor="let f of field.fieldGroup" [field]="f"></formly-field>\n    <ng-content></ng-content>\n  ',host:{"[class]":'field.fieldGroupClassName || ""'}}]}],t}(L),Z=function(){function e(e){this.formlyConfig=e}return e.prototype.ngOnChanges=function(){var e=this;this.errorMessage$=this.field.formControl.statusChanges.pipe(Object(f.a)(null),Object(s.a)(function(){return Object(d.a)(e.errorMessage)?e.errorMessage:Object(m.a)(e.errorMessage)}))},Object.defineProperty(e.prototype,"errorMessage",{get:function(){var e=this.field.formControl;for(var t in e.errors)if(e.errors.hasOwnProperty(t)){var o=this.formlyConfig.getValidatorMessage(t);if(j(e.errors[t])){if(e.errors[t].errorPath)return;e.errors[t].message&&(o=e.errors[t].message)}return this.field.validation&&this.field.validation.messages&&this.field.validation.messages[t]&&(o=this.field.validation.messages[t]),this.field.validators&&this.field.validators[t]&&this.field.validators[t].message&&(o=this.field.validators[t].message),this.field.asyncValidators&&this.field.asyncValidators[t]&&this.field.asyncValidators[t].message&&(o=this.field.asyncValidators[t].message),"function"==typeof o?o(e.errors[t],this.field):o}},enumerable:!0,configurable:!0}),e.decorators=[{type:n.Component,args:[{selector:"formly-validation-message",template:"{{ errorMessage$ | async }}",changeDetection:n.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:G}]},e.propDecorators={field:[{type:n.Input}]},e}(),z=function(e){function t(t){var o=e.call(this)||this;return o.sanitizer=t,o.innerHtml={content:null,template:null},o}return Object(g.d)(t,e),Object.defineProperty(t.prototype,"template",{get:function(){return this.field&&this.field.template!==this.innerHtml.template&&(this.innerHtml={template:this.field.template,content:this.to.safeHtml?this.sanitizer.bypassSecurityTrustHtml(this.field.template):this.field.template}),this.innerHtml.content},enumerable:!0,configurable:!0}),t.decorators=[{type:n.Component,args:[{selector:"formly-template",template:'<div [innerHtml]="template"></div>'}]}],t.ctorParameters=function(){return[{type:i.DomSanitizer}]},t}(L);function Y(e,t,o){return e instanceof Function?e.apply(t,o):!!e}var U=function(){function e(){}return e.prototype.prePopulate=function(e){var t=this;if(!e.parent&&!e.options._checkField){var o=!1;e.options._checkField=function(e,r){o||(o=!0,R(e.formControl,function(){return t.checkField(e,r)}),o=!1)}}},e.prototype.postPopulate=function(e){var t=this;if(e.parent&&!e._expressionProperties){if(V(e,"_expressionProperties",{}),e.expressionProperties){var o=function(o){var n=e.expressionProperties[o];if("string"==typeof n||x(n))e._expressionProperties[o]={expression:r._evalExpression(o,n,"templateOptions.disabled"===o&&e.parent.expressionProperties&&e.parent.expressionProperties.hasOwnProperty("templateOptions.disabled")?function(){return e.parent.templateOptions.disabled}:void 0)},"templateOptions.disabled"===o&&Object.defineProperty(e._expressionProperties[o],"expressionValue",{get:function(){return e.templateOptions.disabled},set:function(){},enumerable:!0,configurable:!0});else if(n instanceof y.a){var i=function(){return n.subscribe(function(r){t.setExprValue(e,o,r),e.options&&e.options._markForCheck&&e.options._markForCheck(e)})},s=i(),a=e.hooks.onInit;e.hooks.onInit=function(){return null===s&&(s=i()),a&&a(e)};var l=e.hooks.onDestroy;e.hooks.onDestroy=function(){l&&l(e),s.unsubscribe(),s=null}}},r=this;for(var n in e.expressionProperties)o(n)}e.hideExpression?(delete e.hide,e.hideExpression=this._evalExpression("hide",e.hideExpression,function(){for(var t=e.parent;t.parent&&!t.hide;)t=t.parent;return t.hide})):P(e,"hide",function(t){var o=t.currentValue,r=t.firstChange;e._hide=o,(!r||r&&!0===o)&&e.options._hiddenFieldsForCheck.push(e)})}},e.prototype._evalExpression=function(e,t,o){return function(r,n,i){try{return"string"==typeof t&&(t=function(e,t){try{return-1!==e.indexOf("this.field")&&console.warn("NgxFormly: using 'this.field' in expressionProperties is deprecated since v5.1, use 'field' instead."),Function.apply(void 0,Object(g.j)(t,["return "+e+";"]))}catch(o){console.error(o)}}(t,["model","formState","field"])),"function"!=typeof t&&(t=function(){return!!t}),o&&o()||t(r,n,i)}catch(s){throw s.message='[Formly Error] [Expression "'+e+'"] '+s.message,s}}},e.prototype.checkField=function(e,t){var o=this;void 0===t&&(t=!1);var r=this._checkField(e,t);e.options._hiddenFieldsForCheck.sort(function(e){return e.hide?-1:1}).forEach(function(e){return o.toggleFormControl(e,!!e.hide,!t)}),e.options._hiddenFieldsForCheck=[],r&&(this.checkField(e),e.options&&e.options._markForCheck&&e.options._markForCheck(e))},e.prototype._checkField=function(e,t){var o=this;void 0===t&&(t=!1);var r=!1;return e.fieldGroup.forEach(function(n){n.options&&(o.checkFieldExpressionChange(n,t)&&(r=!0),o.checkFieldVisibilityChange(n,t)&&(e.options._hiddenFieldsForCheck.push(n),r=!0),n.fieldGroup&&n.fieldGroup.length>0&&o._checkField(n,t)&&(r=!0))}),r},e.prototype.checkFieldExpressionChange=function(e,t){if(!e||!e._expressionProperties)return!1;var o=!1,r=e._expressionProperties;for(var n in r){var i=Y(r[n].expression,{field:e},[e.model,e.options.formState,e]);"templateOptions.disabled"===n&&(i=!!i),(t||r[n].expressionValue!==i&&(!j(i)||Object(d.a)(i)||JSON.stringify(i)!==JSON.stringify(r[n].expressionValue)))&&(o=!0,r[n].expressionValue=i,this.setExprValue(e,n,i))}return o},e.prototype.checkFieldVisibilityChange=function(e,t){if(!e||_(e.hideExpression))return!1;var o=!!Y(e.hideExpression,{field:e},[e.model,e.options.formState,e]),r=!1;return(o!==e.hide||t)&&(r=!0,e.hide=o,e.templateOptions.hidden=o),r},e.prototype.setDisabledState=function(e,t){var o=this;e.fieldGroup&&e.fieldGroup.filter(function(e){return!e.expressionProperties||!e.expressionProperties.hasOwnProperty("templateOptions.disabled")}).forEach(function(e){return o.setDisabledState(e,t)}),e.key&&e.templateOptions.disabled!==t&&(e.templateOptions.disabled=t)},e.prototype.toggleFormControl=function(e,t,o){var r=this;if(e.formControl&&e.key){V(e,"_hide",!(!t&&!e.hide));var n=e.formControl;n._fields&&n._fields.length>1&&N(n),!0!==t||n._fields&&!n._fields.every(function(e){return!!e._hide})?!1===t&&(e.resetOnHide&&e.parent&&!k(e.defaultValue)&&k(F(e))&&O(e,e.defaultValue),D(e,void 0,!0),e.resetOnHide&&e.fieldArray&&(e.fieldGroup||[]).length!==(e.model||[]).length&&e.options._buildForm(!0)):(M(e,!0),o&&e.resetOnHide&&(e.formControl.reset({value:void 0,disabled:e.formControl.disabled}),e.fieldGroup&&(O(e,void 0),e.formControl instanceof c.FormArray&&(e.fieldGroup.length=0))))}e.fieldGroup&&e.fieldGroup.filter(function(e){return!e.hideExpression}).forEach(function(e){return r.toggleFormControl(e,t,o)}),e.options.fieldChanges&&e.options.fieldChanges.next({field:e,type:"hidden",value:t})},e.prototype.setExprValue=function(e,t,o){try{for(var r=e,n=-1===t.indexOf("[")?t.split("."):t.replace(/\'|\"/g,"").split(/[[\]]{1,2}/).filter(function(e){return e}),i=n.length-1,s=0;s<i;s++)r=r[n[s]];r[n[i]]=o}catch(p){throw p.message='[Formly Error] [Expression "'+t+'"] '+p.message,p}if("templateOptions.disabled"===t&&e.key&&this.setDisabledState(e,o),0===t.indexOf("model.")){var a=t.replace(/^model\./,""),l=e.key&&t===a?e.formControl:e.parent.formControl.get(a);!l||_(l.value)&&_(o)||l.value===o||l.patchValue(o)}this.emitExpressionChanges(e,t,o)},e.prototype.emitExpressionChanges=function(e,t,o){e.options.fieldChanges&&e.options.fieldChanges.next({field:e,type:"expressionChanges",property:t,value:o})},e}(),X=function(){function e(e){this.formlyConfig=e}return e.prototype.onPopulate=function(e){this.initFieldValidation(e,"validators"),this.initFieldValidation(e,"asyncValidators")},e.prototype.initFieldValidation=function(e,t){var o=this,r=[];if("validators"!==t||e.hasOwnProperty("fieldGroup")&&!e.key||r.push(this.getPredefinedFieldValidation(e)),e[t])for(var n in e[t])"validation"!==n||Array.isArray(e[t].validation)||(e[t].validation=[e[t].validation],console.warn("NgxFormly("+e.key+"): passing a non array value to the 'validation' is deprecated, pass an array instead")),"validation"===n?r.push.apply(r,Object(g.j)(e[t].validation.map(function(t){return o.wrapNgValidatorFn(e,t)}))):r.push(this.wrapNgValidatorFn(e,e[t][n],n));V(e,"_"+t,r)},e.prototype.getPredefinedFieldValidation=function(e){var t=[];return C.forEach(function(o){return P(e.templateOptions,o,function(r){var n=r.currentValue,i=r.firstChange;t=t.filter(function(e){return e!==o}),null!=n&&!1!==n&&t.push(o),!i&&e.formControl&&N(e.formControl)})}),function(o){return 0===t.length?null:c.Validators.compose(t.map(function(t){return function(){var r=e.templateOptions[t];switch(t){case"required":return c.Validators.required(o);case"pattern":return c.Validators.pattern(r)(o);case"minLength":return c.Validators.minLength(r)(o);case"maxLength":return c.Validators.maxLength(r)(o);case"min":return c.Validators.min(r)(o);case"max":return c.Validators.max(r)(o)}}}))(o)}},e.prototype.wrapNgValidatorFn=function(e,t,o){var r=this,n=null;if("string"==typeof t&&(n=w(this.formlyConfig.getValidator(t))),"object"==typeof t&&t.name&&(n=w(this.formlyConfig.getValidator(t.name)),t.options&&(n.options=t.options)),"object"==typeof t&&t.expression){var i=t.expression,s=Object(g.i)(t,["expression"]);n={name:o,validation:i,options:Object.keys(s).length>0?s:null}}return"function"==typeof t&&(n={name:o,validation:t}),function(t){var i,s=n.validation(t,e,n.options);return(i=s)&&"function"==typeof i.then?s.then(function(t){return r.handleAsyncResult(e,o?!!t:t,n)}):Object(d.a)(s)?s.pipe(Object(u.a)(function(t){return r.handleAsyncResult(e,o?!!t:t,n)})):r.handleResult(e,o?!!s:s,n)}},e.prototype.handleAsyncResult=function(e,t,o){return e.options&&e.options._markForCheck&&e.options._markForCheck(e),this.handleResult(e,t,o)},e.prototype.handleResult=function(e,t,o){var r,n=o.name,i=o.options;"boolean"==typeof t&&(t=t?null:((r={})[n]=i||!0,r));var s=e.formControl;return s._childrenErrors&&s._childrenErrors[n]&&s._childrenErrors[n](),j(t)&&Object.keys(t).forEach(function(o){var r,n=t[o].errorPath?t[o].errorPath:(i||{}).errorPath,a=n?e.formControl.get(n):null;if(a){var l=t[o],p=(l.errorPath,Object(g.i)(l,["errorPath"]));a.setErrors(Object(g.a)({},a.errors||{},((r={})[o]=p,r))),!s._childrenErrors&&V(s,"_childrenErrors",{}),s._childrenErrors[o]=function(){var e=a.errors||{},t=o,r=(e[t],Object(g.i)(e,["symbol"==typeof t?t:t+""]));a.setErrors(0===Object.keys(r).length?null:r)}}}),t},e}(),K=function(){function e(e){this.config=e}return e.prototype.onPopulate=function(e){e.parent&&(e.fieldGroup&&!e.key?V(e,"formControl",e.parent.formControl):this.addFormControl(e))},e.prototype.postPopulate=function(e){if(!e.parent){var t=this.setValidators(e);if(0!==t.length)if(1===t.length)for(var o=t[0].formControl;o;)o._updateTreeValidity({onlySelf:!0}),o=o.parent;else e.formControl._updateTreeValidity()}},e.prototype.addFormControl=function(e){var t=T(e);if(!t){var o={updateOn:e.modelOptions.updateOn},r=e.key?F(e):e.defaultValue,n=this.config?this.config.resolveFieldTypeRef(e):null;if(n&&n.componentType&&n.componentType.createControl){var i=n.componentType;console.warn("NgxFormly: '"+i.name+"::createControl' is deprecated since v5.0, use 'prePopulate' hook instead."),t=i.createControl(r,e)}else t=e.fieldGroup?new c.FormGroup({},o):new c.FormControl(r,o)}D(e,t)},e.prototype.setValidators=function(e){var t=this,o=!1;if(e.key||!e.parent||!e.key&&!e.fieldGroup){var r=e.formControl,n=!!e.templateOptions&&e.templateOptions.disabled;e.key&&r&&(n&&r.enabled&&(r.disable({emitEvent:!1,onlySelf:!0}),r.parent?o=!0:N(r)),!n&&r.disabled&&(r.enable({emitEvent:!1,onlySelf:!0}),r.parent?o=!0:N(r))),!r||null!==r.validator&&null!==r.asyncValidator||(r.setValidators(function(){var o=c.Validators.compose(t.mergeValidators(e,"_validators"));return o?o(r):null}),r.setAsyncValidators(function(){var o=c.Validators.composeAsync(t.mergeValidators(e,"_asyncValidators"));return o?o(r):Object(m.a)(null)}),r.parent?o=!0:N(r))}var i=o?[e]:[];return(e.fieldGroup||[]).forEach(function(e){var r=t.setValidators(e);o||i.push.apply(i,Object(g.j)(r))}),i},e.prototype.mergeValidators=function(e,t){var o=this,r=[],n=e.formControl;return n&&n._fields&&n._fields.length>1?n._fields.filter(function(e){return!e._hide}).forEach(function(e){return r.push.apply(r,Object(g.j)(e[t]))}):e[t]&&r.push.apply(r,Object(g.j)(e[t])),e.fieldGroup&&e.fieldGroup.filter(function(e){return!e.key&&e.fieldGroup}).forEach(function(e){return r.push.apply(r,Object(g.j)(o.mergeValidators(e,t)))}),r},e}(),Q=function(){function e(e){this.formlyConfig=e,this.formId=0}return e.prototype.prePopulate=function(e){if(this.getFieldComponentInstance(e).prePopulate(),!e.parent){var t=e.options&&e.options.fieldTransform||this.formlyConfig.extras.fieldTransform;(Array.isArray(t)?t:[t]).forEach(function(t){if(t&&(console.warn("NgxFormly: fieldTransform is deprecated since v5.0, use custom extension instead."),!t(e.fieldGroup,e.model,e.formControl,e.options)))throw new Error("fieldTransform must return an array of fields")})}},e.prototype.onPopulate=function(e){var t=this;this.initFieldOptions(e),this.getFieldComponentInstance(e).onPopulate(),e.fieldGroup&&e.fieldGroup.forEach(function(o,r){Object.defineProperty(o,"parent",{get:function(){return e},configurable:!0}),Object.defineProperty(o,"index",{get:function(){return r},configurable:!0}),t.formId++})},e.prototype.postPopulate=function(e){this.getFieldComponentInstance(e).postPopulate()},e.prototype.initFieldOptions=function(e){var t=e.parent;if(t){if(Object.defineProperty(e,"form",{get:function(){return t.formControl},configurable:!0}),Object.defineProperty(e,"options",{get:function(){return t.options},configurable:!0}),Object.defineProperty(e,"model",{get:function(){return e.key&&e.fieldGroup?F(e):t.model},configurable:!0}),E(e,{id:v("formly_"+this.formId,e,e.index),hooks:{},modelOptions:{},templateOptions:e.type&&e.key?{label:"",placeholder:"",focus:!1,disabled:!1}:{}}),this.formlyConfig.extras.resetFieldOnHide&&!1!==e.resetOnHide&&(e.resetOnHide=!0),e.lifecycle&&console.warn("NgxFormly: 'lifecycle' is deprecated since v5.0, use 'hooks' instead."),"formly-template"!==e.type&&(e.template||e.expressionProperties&&e.expressionProperties.template)&&(e.type&&console.warn("NgxFormly: passing 'type' property is not allowed when 'template' is set."),e.type="formly-template"),!e.type&&e.fieldGroup&&(e.type="formly-group"),e.type&&this.formlyConfig.getMergedField(e),e.parent){var o=!k(e.key)&&!k(e.defaultValue)&&k(F(e))&&(!e.resetOnHide||!(e.hide||e.hideExpression));if(o&&e.resetOnHide){for(var r=e.parent;r&&!r.hideExpression&&!r.hide;)r=r.parent;o=!r||!(r.hideExpression||r.hide)}o&&O(e,e.defaultValue)}this.initFieldWrappers(e)}},e.prototype.initFieldWrappers=function(e){e.wrappers=e.wrappers||[];var t=Object(g.a)({preWrapper:[],postWrapper:[]},e.templateOptions.templateManipulators||{});e.wrappers=Object(g.j)(this.formlyConfig.templateManipulators.preWrapper.map(function(t){return t(e)}),t.preWrapper.map(function(t){return t(e)}),e.wrappers,this.formlyConfig.templateManipulators.postWrapper.map(function(t){return t(e)}),t.postWrapper.map(function(t){return t(e)})).filter(function(e,t,o){return e&&t===o.indexOf(e)})},e.prototype.getFieldComponentInstance=function(e){var t=this.formlyConfig.resolveFieldTypeRef(e),o=t?t.instance:{};return{prePopulate:function(){return o.prePopulate&&o.prePopulate(e)},onPopulate:function(){return o.onPopulate&&o.onPopulate(e)},postPopulate:function(){return o.postPopulate&&o.postPopulate(e)}}},e}();function ee(e){return{types:[{name:"formly-group",component:J},{name:"formly-template",component:z}],extensions:[{name:"core",extension:new Q(e)},{name:"field-validation",extension:new X(e)},{name:"field-form",extension:new K(e)},{name:"field-expression",extension:new U}]}}var te=function(){function e(e,t){void 0===t&&(t=[]),t&&t.forEach(function(t){return e.addConfig(t)})}return e.forRoot=function(t){return void 0===t&&(t={}),{ngModule:e,providers:[{provide:A,multi:!0,useFactory:ee,deps:[G]},{provide:A,useValue:t,multi:!0},{provide:n.ANALYZE_FOR_ENTRY_COMPONENTS,useValue:t,multi:!0},G,I]}},e.forChild=function(t){return void 0===t&&(t={}),{ngModule:e,providers:[{provide:A,multi:!0,useFactory:ee,deps:[G]},{provide:A,useValue:t,multi:!0},{provide:n.ANALYZE_FOR_ENTRY_COMPONENTS,useValue:t,multi:!0},I]}},e.decorators=[{type:n.NgModule,args:[{declarations:[H,W,$,J,Z,z,B],entryComponents:[J,z],exports:[H,W,$,J,Z],imports:[r.CommonModule]}]}],e.ctorParameters=function(){return[{type:G},{type:Array,decorators:[{type:n.Optional},{type:n.Inject,args:[A]}]}]},e}()}}]);